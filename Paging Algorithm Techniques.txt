i) FIFO
#include <stdio.h>
#include <conio.h>

void display(int fr[], int frsize) {
    printf("\n");
    for (int i = 0; i < frsize; i++)
        printf("%d\t", fr[i]);
}

int main() {
    int frsize;
    printf("Enter the number of frames: ");
    scanf("%d", &frsize);

    int fr[frsize], page[frsize];
    int pf = 0, top = 0;

    printf("Enter the size of the reference string: ");
    int size;
    scanf("%d", &size);

    printf("Enter the reference string: ");
    for (int i = 0; i < size; i++)
        scanf("%d", &page[i]);

    for (int i = 0; i < frsize; i++)
        fr[i] = -1;

    for (int j = 0; j < size; j++) {
        int flag1 = 0, flag2 = 0;
        for (int i = 0; i < frsize; i++) {
            if (fr[i] == page[j]) {
                flag1 = 1;
                flag2 = 1;
                break;
            }
        }
        if (flag1 == 0) {
            for (int i = 0; i < frsize; i++) {
                if (fr[i] == -1) {
                    fr[i] = page[j];
                    flag2 = 1;
                    break;
                }
            }
        }
        if (flag2 == 0) {
            fr[top] = page[j];
            top = (top + 1) % frsize;
            pf++;
        }
        display(fr, frsize);
    }

    printf("\nNumber of page faults : %d\n", pf + frsize);
    getch();
    return 0;
}



ii)LRU
#include <stdio.h>
#include <stdbool.h>

void display(int fr[], int frsize) {
    printf("\n");
    for (int i = 0; i < frsize; i++)
        printf("%d\t", fr[i]);
}

int main() {
    int fr[3];
    int p[5];
    int pf = 0, frsize = 3;

    printf("Enter the number of frames: ");
    scanf("%d", &frsize);

    printf("Enter the size of the reference string: ");
    int n;
    scanf("%d", &n);

    printf("Enter the reference string: ");
    for (int i = 0; i < n; i++)
        scanf("%d", &p[i]);

    for (int i = 0; i < frsize; i++)
        fr[i] = -1;

    for (int j = 0; j < n; j++) {
        int flag = 0;
        for (int i = 0; i < frsize; i++) {
            if (fr[i] == p[j]) {
                flag = 1;
                break;
            }
        }
        if (flag == 0) {
            int oldest_index = 0;
            int oldest_age = 0;
            for (int i = 0; i < frsize; i++) {
                int age = 0;
                for (int k = j - 1; k >= 0; k--) {
                    if (p[k] == fr[i]) {
                        break;
                    }
                    age++;
                }
                if (age > oldest_age) {
                    oldest_age = age;
                    oldest_index = i;
                }
            }
            fr[oldest_index] = p[j];
            pf++;
        }
        display(fr, frsize);
    }

    printf("\nNumber of page faults: %d\n", pf);
    return 0;
}



iii) Optimal
#include<stdio.h>
#include<conio.h>

int fr[10], n, m;

void display() {
    for(int i = 0; i < m; i++)
        printf("%d\t", fr[i]);
    printf("\n");
}

void main() {
    int page[20], lg[10], index, k, max, found=0, flag1=0, flag2=0, pf=0;
    float pr;

    printf("Enter length of the reference string: ");
    scanf("%d", &n);

    printf("Enter the reference string: ");
    for(int i = 0; i < n; i++)
        scanf("%d", &page[i]);

    printf("Enter number of frames: ");
    scanf("%d", &m);

    for(int i = 0; i < m; i++)
        fr[i] = -1;

    pf = m;

    for(int j = 0; j < n; j++) {
        flag1 = 0;
        flag2 = 0;

        for(int i = 0; i < m; i++) {
            if(fr[i] == page[j]) {
                flag1 = 1;
                flag2 = 1;
                break;
            }
        }

        if(flag1 == 0) {
            for(int i = 0; i < m; i++) {
                if(fr[i] == -1) {
                    fr[i] = page[j];
                    flag2 = 1;
                    break;
                }
            }
        }

        if(flag2 == 0) {
            for(int i = 0; i < m; i++)
                lg[i] = 0;

            for(int i = 0; i < m; i++) {
                for(k = j + 1; k < n; k++) {
                    if(fr[i] == page[k]) {
                        lg[i] = k - j;
                        break;
                    }
                }
            }

            found = 0;

            for(int i = 0; i < m; i++) {
                if(lg[i] == 0) {
                    index = i;
                    found = 1;
                    break;
                }
            }

            if(found == 0) {
                max = lg[0];
                index = 0;

                for(int i = 0; i < m; i++) {
                    if(max < lg[i]) {
                        max = lg[i];
                        index = i;
                    }
                }
            }

            fr[index] = page[j];
            pf++;
        }

        display();
    }

    printf("Number of page faults: %d\n", pf);

    pr = (float)pf / n * 100;
    printf("Page fault rate = %f \n", pr);

    getch();
}


