//Bankers algorithm(Dead Lock Avoidance)

#include <stdio.h>
#include <string.h>
int main() {
    int alloc[10][10], max[10][10];
    int avail[10], work[10], total[10];
    int need[10][10];
    int i, j, k, n, m;
    int count = 0;
    char finish[10];
    printf("Enter the no. of processes and resources:");
    scanf("%d %d", &n, &m);
    for (i = 0; i < n; i++)
        finish[i] = 'n';
    printf("Enter the claim matrix:\n");
    for (i = 0; i < n; i++)
        for (j = 0; j < m; j++)
            scanf("%d", &max[i][j]);
    printf("Enter the allocation matrix:\n");
    for (i = 0; i < n; i++)
        for (j = 0; j < m; j++)
            scanf("%d", &alloc[i][j]);
    printf("Enter the total resources vector:");
    for (i = 0; i < m; i++)
        scanf("%d", &total[i]);
    for (i = 0; i < m; i++) {
        avail[i] = total[i];
        for (j = 0; j < n; j++)
            avail[i] -= alloc[j][i];    }
    for (i = 0; i < m; i++)
        work[i] = avail[i];
    for (i = 0; i < n; i++)
        for (j = 0; j < m; j++)
            need[i][j] = max[i][j] - alloc[i][j];
    while (count != n) {
        int c = 0;
        for (i = 0; i < n; i++) {
            if (finish[i] == 'n') {
                c = 1;
                for (j = 0; j < m; j++) {
                    if (need[i][j] > work[j]) {
                        c = 0;
                        break;          }     }
                if (c) {
                    printf("All the resources can be allocated to Process %d\n", i + 1);
                    printf("Available resources are:");
                    for (k = 0; k < m; k++) {
                        work[k] += alloc[i][k];
                        printf("%4d", work[k]);        }
                    printf("\n");
                    finish[i] = 'y';
                    printf("Process %d executed: %c\n", i + 1, finish[i]);
                    count++;      }       }}
        if (!c) {
            printf("System is not in safe mode\n");
            printf("The given state is unsafe\n");
            break;      }    }
    if (count == n)
        printf("System is in safe mode\n");
    return 0; }
